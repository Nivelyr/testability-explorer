###
#
#  Copyright 2007 Google Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.
#
###

###
# US-English message bundle for the testability explorer reports.
# It contains some HTML markup, so it's intended to be displayed in HTML.
# TODO(alexeagle): we'll probably want to render issues in other contexts, like the CLI or IDE
#
# @author alexeagle@google.com (Alex Eagle)
###


report.title=Testability Report
report.timestamp=Report generated on: {0,date,yyyy-MM-dd hh:mm:ss}

report.explain.linkToWiki=Why is it bad?
report.explain.onLine=On line
report.explain.contribution=Contribution<br/>to class cost

report.explain.class.hardToTest=Class {0}{1}{2} is hard to test because:

###
# Hard to test due to construction of the class
###
report.explain.class.construction=\
  It is expensive to construct an instance of the class, and every test will need to call a constructor.
report.explain.class.construction.static_init=\
  This static initializer will have to be run once, when the class is loaded.
report.explain.class.construction.static_init.suggest=\
  Instead of initializing statically, initialize it with every instance. \
  &laquo;but doesn't that incur the same cost, and once per test rather than just once? \
  Need to mention static state?&raquo;
report.explain.class.construction.static_method=Static method called in constructor
report.explain.class.construction.static_method.suggest=\
  This couples every test to use the code in the static method. \
  Refactor the static method to be an instance method on the class.
report.explain.class.construction.setter=This setter method may need to be called before some methods can be tested
report.explain.class.construction.setter.suggest=\
  Setter methods should avoid doing serious work. Instead, the \
  initialized state should be passed to the setter.
report.explain.class.construction.new_operator=You are calling <tt>new</tt> in the constructor
report.explain.class.construction.new_operator.suggest=\
  Using <tt>new</tt> couples this class to the one instantiated, \
  preventing you from testing this class in isolation of that collaborator. \
  Instead, pass an instance of the collaborator to this class&rsquo; constructor.
report.explain.class.construction.complexity=This constructor has a high cyclomatic complexity
report.explain.class.construction.complexity.suggest=\
  Don&rsquo;t perform work in the constructor. Instead, pass the needed state, fully initialized, from the caller.

#report.explain.class.staticInit=Static initializers must be run:
#report.explain.class.staticInit.variable=a static member variable {0} is initialized to a value that is complex to evaluate.
#report.explain.class.staticInit.suggest=Suggestion: these static members are complex. Instantiate the values outside this class, and pass them as parameters to the constructor.

#report.explain.class.constructor=The constructor does work:
#report.explain.class.constructor.methodExec=in the constructor, {0} is executed, which has a high complexity.
#report.explain.class.constructor.suggest=Suggestion: tests will have to execute this code to create an instance. Do this work outside the class, and pass the needed state as a parameter to the constructor. If this is impossible, at least move this code to an initialization method.

###
# Hard to test due to non-mockable collaborators
###
report.explain.class.collaborators=\
  Some collaborators cannot be mocked, so it is impossible to test this class in isolation from those classes.

report.explain.class.collaborators.static_method=Static method called
#report.explain.class.staticMethod.method={0} is called, which has {1} complexity and {2} global cost.
report.explain.class.collaborators.static_method.suggest=\
  Suggestion: since these static methods are complicated, we want to mock them out in the unit test. \
  Refactor the methods to be non-static, and pass the object holding them to the constructor.

report.explain.class.collaborators.new_operator=Instances created with <tt>new</tt>:
#report.explain.class.newOp.new={class} is constructed, then
#report.explain.class.newOp.methodCalled=on line {0}, {1} is called on it, which has a {2} complexity.
report.explain.class.collaborators.new_operator.suggest=\
  Suggestion: add constructor parameters for {0} so that a unit test may substitute a different implementation \
  that costs less.


###
# Hard to test because of direct costs
###
report.explain.class.directCost=The code itself is complex
report.explain.class.directcost.cyclomatic=Method {0} has high complexity.
report.explain.class.directcost.cyclomatic.suggest=Suggestion: refactor the method by breaking the complex portions into several smaller methods.


###
# Hard to test because of mutable global state
###

###
# Makes other code hard to test
###
#report.explain.class.impactOnOthers=This class may make it hard to test other code that uses it because:
#report.explain.class.staticVars=Static variables need to be set to the correct state
#
report.explain.class.benefits=If these changes were made, the cost of testing this class would be reduced by {0}{1,number,##%}{2}.



################################
#
# The "About Testability" report
#
################################
report.about.title=Examples of how Testability works
report.about.description=Testability explorer analyzes compiled classes, looking for issues in your code that make it difficult to unit test. \
  Each class below is an example of a particular bad practice, and is followed by the explanation of the issues that are found in that code. \
  To create a report like this for your code, see <a href="http://testability-explorer.googlecode.com">the Testability Explorer website</a>.
report.about.class=Example class: {0}{1}{2}
