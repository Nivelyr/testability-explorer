<?xml version="1.0"?>
<testability excelent="184" good="2" needsWork="5" overall="356"><class class="com.google.test.metric.cpp.Parser" cost="3216"><method cyclomatic="0" global="0" line="23" lod="0" name="com.google.test.metric.cpp.Parser()" overall="0"/><method cyclomatic="3206" global="1" line="26" lod="0" name="com.google.test.metric.cpp.dom.TranslationUnit parse(java.lang.String)" overall="3216"><cost cyclomatic="0" global="0" line="23" lod="0" method="com.google.test.metric.cpp.Parser()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.cpp.RootBuilder()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="9" global="0" line="28" lod="0" method="com.google.test.metric.cpp.InternalLexer(java.io.Reader)" overall="9" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="29" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.TokenStream)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3194" global="1" line="30" lod="0" method="void translation_unit(com.google.test.metric.cpp.Builder)" overall="3204" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="31" lod="0" method="com.google.test.metric.cpp.dom.TranslationUnit getNode()" overall="0" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.cpp.InternalParser" cost="3129"><method cyclomatic="1" global="0" line="9136" lod="0" name="com.google.test.metric.cpp.InternalParser()" overall="1"><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="9300" lod="0" method="long[] mk_tokenSet_0()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9300" lod="0" method="antlr.collections.impl.BitSet(long[])" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9305" lod="0" method="long[] mk_tokenSet_1()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9310" lod="0" method="long[] mk_tokenSet_2()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9315" lod="0" method="long[] mk_tokenSet_3()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9320" lod="0" method="long[] mk_tokenSet_4()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9325" lod="0" method="long[] mk_tokenSet_5()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9330" lod="0" method="long[] mk_tokenSet_6()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9335" lod="0" method="long[] mk_tokenSet_7()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9340" lod="0" method="long[] mk_tokenSet_8()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9345" lod="0" method="long[] mk_tokenSet_9()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9350" lod="0" method="long[] mk_tokenSet_10()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9355" lod="0" method="long[] mk_tokenSet_11()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9360" lod="0" method="long[] mk_tokenSet_12()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9365" lod="0" method="long[] mk_tokenSet_13()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9370" lod="0" method="long[] mk_tokenSet_14()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9375" lod="0" method="long[] mk_tokenSet_15()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9380" lod="0" method="long[] mk_tokenSet_16()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9385" lod="0" method="long[] mk_tokenSet_17()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9390" lod="0" method="long[] mk_tokenSet_18()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9395" lod="0" method="long[] mk_tokenSet_19()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9400" lod="0" method="long[] mk_tokenSet_20()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9405" lod="0" method="long[] mk_tokenSet_21()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9410" lod="0" method="long[] mk_tokenSet_22()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9415" lod="0" method="long[] mk_tokenSet_23()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9420" lod="0" method="long[] mk_tokenSet_24()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9425" lod="0" method="long[] mk_tokenSet_25()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9430" lod="0" method="long[] mk_tokenSet_26()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9435" lod="0" method="long[] mk_tokenSet_27()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9440" lod="0" method="long[] mk_tokenSet_28()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9445" lod="0" method="long[] mk_tokenSet_29()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9450" lod="0" method="long[] mk_tokenSet_30()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9455" lod="0" method="long[] mk_tokenSet_31()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9460" lod="0" method="long[] mk_tokenSet_32()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9465" lod="0" method="long[] mk_tokenSet_33()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9470" lod="0" method="long[] mk_tokenSet_34()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9475" lod="0" method="long[] mk_tokenSet_35()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9480" lod="0" method="long[] mk_tokenSet_36()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9485" lod="0" method="long[] mk_tokenSet_37()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9490" lod="0" method="long[] mk_tokenSet_38()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9495" lod="0" method="long[] mk_tokenSet_39()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9500" lod="0" method="long[] mk_tokenSet_40()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9505" lod="0" method="long[] mk_tokenSet_41()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9510" lod="0" method="long[] mk_tokenSet_42()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9515" lod="0" method="long[] mk_tokenSet_43()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9520" lod="0" method="long[] mk_tokenSet_44()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9525" lod="0" method="long[] mk_tokenSet_45()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9530" lod="0" method="long[] mk_tokenSet_46()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9535" lod="0" method="long[] mk_tokenSet_47()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9540" lod="0" method="long[] mk_tokenSet_48()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9545" lod="0" method="long[] mk_tokenSet_49()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9550" lod="0" method="long[] mk_tokenSet_50()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9555" lod="0" method="long[] mk_tokenSet_51()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9560" lod="0" method="long[] mk_tokenSet_52()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9565" lod="0" method="long[] mk_tokenSet_53()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9570" lod="0" method="long[] mk_tokenSet_54()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9575" lod="0" method="long[] mk_tokenSet_55()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9580" lod="0" method="long[] mk_tokenSet_56()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9585" lod="0" method="long[] mk_tokenSet_57()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9590" lod="0" method="long[] mk_tokenSet_58()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9595" lod="0" method="long[] mk_tokenSet_59()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9600" lod="0" method="long[] mk_tokenSet_60()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9605" lod="0" method="long[] mk_tokenSet_61()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9610" lod="0" method="long[] mk_tokenSet_62()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9615" lod="0" method="long[] mk_tokenSet_63()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9620" lod="0" method="long[] mk_tokenSet_64()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9625" lod="0" method="long[] mk_tokenSet_65()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9630" lod="0" method="long[] mk_tokenSet_66()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9635" lod="0" method="long[] mk_tokenSet_67()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9640" lod="0" method="long[] mk_tokenSet_68()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9645" lod="0" method="long[] mk_tokenSet_69()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9650" lod="0" method="long[] mk_tokenSet_70()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9655" lod="0" method="long[] mk_tokenSet_71()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9660" lod="0" method="long[] mk_tokenSet_72()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9665" lod="0" method="long[] mk_tokenSet_73()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9670" lod="0" method="long[] mk_tokenSet_74()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9675" lod="0" method="long[] mk_tokenSet_75()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9680" lod="0" method="long[] mk_tokenSet_76()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9685" lod="0" method="long[] mk_tokenSet_77()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9690" lod="0" method="long[] mk_tokenSet_78()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="9695" lod="0" method="long[] mk_tokenSet_79()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="394" lod="0" name="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="394" lod="0" method="antlr.LLkParser(antlr.ParserSharedInputState, int)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="381" lod="0" name="com.google.test.metric.cpp.InternalParser(antlr.TokenBuffer)" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="381" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.TokenBuffer, int)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="376" lod="0" name="com.google.test.metric.cpp.InternalParser(antlr.TokenBuffer, int)" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="376" lod="0" method="antlr.LLkParser(antlr.TokenBuffer, int)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="4" global="0" line="390" lod="0" name="com.google.test.metric.cpp.InternalParser(antlr.TokenStream)" overall="4"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3" global="0" line="390" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.TokenStream, int)" overall="3" reason="cost from calling non-overridable method"/></method><method cyclomatic="4" global="0" line="385" lod="0" name="com.google.test.metric.cpp.InternalParser(antlr.TokenStream, int)" overall="4"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3" global="0" line="385" lod="0" method="antlr.LLkParser(antlr.TokenStream, int)" overall="3" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6008" lod="0" name="void abstract_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2939" global="0" line="6026" lod="0" method="void ptr_operator()" overall="2939" reason="cost from calling non-overridable method"/><cost cyclomatic="116" global="0" line="6040" lod="0" method="void abstract_declarator_suffix()" overall="116" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6156" lod="0" name="void abstract_declarator_suffix()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="6331" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3013" global="0" line="6289" lod="0" method="void parameter_list()" overall="3013" reason="cost from calling non-overridable method"/></method><method cyclomatic="7" global="0" line="3142" lod="0" name="void access_specifier()" overall="7"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="3169" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="3147" lod="0" method="void accessSpecifier(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7566" lod="0" name="void additive_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3125" global="0" line="7566" lod="0" method="void multiplicative_expression()" overall="3125" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7465" lod="0" name="void and_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="7465" lod="0" method="void equality_expression()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="4" global="0" line="7178" lod="0" name="void asm_block()" overall="4"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="7191" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6416" lod="0" name="void assigned_type_name()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3124" global="0" line="6420" lod="0" method="java.lang.String qualified_type()" overall="3124" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7230" lod="0" name="void assignment_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="7231" lod="0" method="void beginAssignmentExpression()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3097" global="0" line="7233" lod="0" method="void conditional_expression()" overall="3097" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="7332" lod="0" method="void endAssignmentExpression()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4327" lod="0" name="void base_clause()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="4328" lod="0" method="void base_specifier()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4730" lod="0" name="void base_specifier()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="4730" lod="0" method="void beginBaseSpecifier()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3109" global="0" line="4766" lod="0" method="java.lang.String qualified_type()" overall="3109" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="4768" lod="0" method="void baseSpecifier(java.lang.String, boolean)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="4794" lod="0" method="void endBaseSpecifier()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6621" lod="0" name="void case_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="6622" lod="0" method="void beginCaseStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3127" global="0" line="6625" lod="0" method="void constant_expression()" overall="3127" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6629" lod="0" method="void endCaseStatement()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7679" lod="0" name="void cast_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="7" global="0" line="7693" lod="0" method="void type_qualifier()" overall="7" reason="cost from calling non-overridable method"/><cost cyclomatic="2585" global="0" line="7723" lod="0" method="void simple_type_specifier()" overall="2585" reason="cost from calling non-overridable method"/><cost cyclomatic="455" global="0" line="7840" lod="0" method="void unary_expression()" overall="455" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1146" lod="0" name="void class_head()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1164" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3119" global="0" line="1178" lod="0" method="void template_argument_list()" overall="3119" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4114" lod="0" name="void class_specifier()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="4144" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="1727" global="0" line="4157" lod="0" method="java.lang.String qualified_id()" overall="1727" reason="cost from calling non-overridable method"/><cost cyclomatic="1367" global="0" line="4251" lod="0" method="void member_declaration()" overall="1367" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="4166" lod="0" method="void beginClassDefinition(java.lang.String, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="4205" lod="0" method="void endClassDefinition()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="3029" lod="0" name="void compound_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="3030" lod="0" method="void beginCompoundStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3042" global="0" line="3120" lod="0" method="void statement_list()" overall="3042" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="3135" lod="0" method="void endCompoundStatement()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7339" lod="0" name="void conditional_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3107" global="0" line="7339" lod="0" method="void logical_or_expression()" overall="3107" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="7345" lod="0" method="void beginTernaryOperator()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="7352" lod="0" method="void endTernaryOperator()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="12" global="0" line="8708" lod="0" name="void constant()" overall="12"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="8769" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4393" lod="0" name="void constant_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="4393" lod="0" method="void conditional_expression()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1538" lod="0" name="void conversion_function_decl_or_def()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3052" global="0" line="1539" lod="0" method="void declaration_specifiers()" overall="3052" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5666" lod="0" name="void ctor_body()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3127" global="0" line="5669" lod="0" method="void ctor_initializer()" overall="3127" reason="cost from calling non-overridable method"/></method><method cyclomatic="11" global="0" line="1385" lod="0" name="void ctor_decl_spec()" overall="11"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1414" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1439" lod="0" method="void declarationSpecifiers(java.util.List)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="2922" lod="0" name="void ctor_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3064" global="0" line="2924" lod="0" method="java.lang.String qualified_ctor_id()" overall="3064" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2926" lod="0" method="void qualifiedCtorId(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1446" lod="0" name="void ctor_definition()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1447" lod="0" method="void beginCtorDefinition()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3078" global="0" line="1449" lod="0" method="void ctor_head()" overall="3078" reason="cost from calling non-overridable method"/><cost cyclomatic="49" global="0" line="1450" lod="0" method="void ctor_body()" overall="49" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1452" lod="0" method="void endCtorDefinition()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5658" lod="0" name="void ctor_head()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="10" global="0" line="5658" lod="0" method="void ctor_decl_spec()" overall="10" reason="cost from calling non-overridable method"/><cost cyclomatic="3119" global="0" line="5659" lod="0" method="void ctor_declarator()" overall="3119" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5710" lod="0" name="void ctor_initializer()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="5711" lod="0" method="void superclass_init()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="10" global="0" line="4974" lod="0" name="void cv_qualifier_seq()" overall="10"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="7" global="0" line="4975" lod="0" method="void type_qualifier()" overall="7" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="2029" lod="0" name="void decl_namespace()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="2092" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3116" global="0" line="2085" lod="0" method="java.lang.String qualified_id()" overall="3116" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2059" lod="0" method="void enterNamespaceScope(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2088" lod="0" method="void makeNamespaceAlias(java.lang.String, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2074" lod="0" method="void exitNamespaceScope()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1032" lod="0" name="void declaration()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3068" global="0" line="1050" lod="0" method="void linkage_specification()" overall="3068" reason="cost from calling non-overridable method"/><cost cyclomatic="7" global="0" line="1134" lod="0" method="void using_declaration()" overall="7" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1720" lod="0" name="void declaration_specifiers()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1921" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="10" global="0" line="1774" lod="0" method="void storage_class_specifier()" overall="10" reason="cost from calling non-overridable method"/><cost cyclomatic="7" global="0" line="1781" lod="0" method="void type_qualifier()" overall="7" reason="cost from calling non-overridable method"/><cost cyclomatic="3035" global="0" line="1916" lod="0" method="void direct_declarator()" overall="3035" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4536" lod="0" name="void declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3123" global="0" line="4543" lod="0" method="void ptr_operator()" overall="3123" reason="cost from calling non-overridable method"/></method><method cyclomatic="4" global="0" line="368" lod="0" name="void declaratorID(java.lang.String, java.util.BitSet)" overall="4"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="3130" global="0" line="5147" lod="0" name="void declarator_suffixes()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="5396" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2952" global="0" line="5292" lod="0" method="void parameter_list()" overall="2952" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6636" lod="0" name="void default_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="6637" lod="0" method="void beginDefaultStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3127" global="0" line="6641" lod="0" method="void statement()" overall="3127" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6643" lod="0" method="void endDefaultStatement()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8535" lod="0" name="void delete_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="8594" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3083" global="0" line="8598" lod="0" method="void cast_expression()" overall="3083" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="3427" lod="0" name="void direct_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2656" global="0" line="3521" lod="0" method="void declarator()" overall="2656" reason="cost from calling non-overridable method"/><cost cyclomatic="177" global="0" line="3523" lod="0" method="void declarator_suffixes()" overall="177" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="3604" lod="0" method="void directDeclarator(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8910" lod="0" name="void direct_new_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3127" global="0" line="8915" lod="0" method="void expression()" overall="3127" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1380" lod="0" name="void dtor_body()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="1380" lod="0" method="void compound_statement()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="11" global="0" line="5799" lod="0" name="void dtor_decl_spec()" overall="11"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="5828" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="5853" lod="0" method="void declarationSpecifiers(java.util.List)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5859" lod="0" name="void dtor_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3125" global="0" line="5862" lod="0" method="java.lang.String scope_override()" overall="3125" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="5867" lod="0" method="void dtorDeclarator(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1367" lod="0" name="void dtor_head()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1368" lod="0" method="void beginDtorHead()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="10" global="0" line="1370" lod="0" method="void dtor_decl_spec()" overall="10" reason="cost from calling non-overridable method"/><cost cyclomatic="3117" global="0" line="1371" lod="0" method="void dtor_declarator()" overall="3117" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1373" lod="0" method="void endDtorHead()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1236" lod="0" name="void enum_specifier()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3064" global="0" line="1244" lod="0" method="void enumerator_list()" overall="3064" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4365" lod="0" name="void enumerator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3126" global="0" line="4374" lod="0" method="void constant_expression()" overall="3126" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4347" lod="0" name="void enumerator_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="4347" lod="0" method="void enumerator()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7484" lod="0" name="void equality_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3125" global="0" line="7484" lod="0" method="void relational_expression()" overall="3125" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7224" lod="0" name="void exception_declaration()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="7224" lod="0" method="void parameter_declaration_list()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4909" lod="0" name="void exception_specification()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="4961" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3121" global="0" line="4924" lod="0" method="java.lang.String scope_override()" overall="3121" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7446" lod="0" name="void exclusive_or_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="7446" lod="0" method="void and_expression()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6650" lod="0" name="void expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="6650" lod="0" method="void assignment_expression()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4656" lod="0" name="void expression_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="4656" lod="0" method="void assignment_expression()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="433" lod="0" name="void external_declaration()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2961" global="0" line="439" lod="0" method="void decl_namespace()" overall="2961" reason="cost from calling non-overridable method"/></method><method cyclomatic="5" global="0" line="321" lod="0" name="boolean finalQualifier(int)" overall="5"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="3130" global="0" line="1933" lod="0" name="void function_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2961" global="0" line="1940" lod="0" method="void ptr_operator()" overall="2961" reason="cost from calling non-overridable method"/><cost cyclomatic="162" global="0" line="1954" lod="0" method="void function_direct_declarator()" overall="162" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1964" lod="0" name="void function_definition()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="2021" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3112" global="0" line="1995" lod="0" method="void function_declarator()" overall="3112" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5404" lod="0" name="void function_direct_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2967" global="0" line="5427" lod="0" method="java.lang.String qualified_id()" overall="2967" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="5442" lod="0" method="void functionDirectDeclarator(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7214" lod="0" name="void handler()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="7216" lod="0" method="void exception_declaration()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8653" lod="0" name="void id_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3123" global="0" line="8656" lod="0" method="java.lang.String scope_override()" overall="3123" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8664" lod="0" method="void idExpression(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7427" lod="0" name="void inclusive_or_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="7427" lod="0" method="void exclusive_or_expression()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4504" lod="0" name="void init_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3076" global="0" line="4504" lod="0" method="void declarator()" overall="3076" reason="cost from calling non-overridable method"/><cost cyclomatic="49" global="0" line="4510" lod="0" method="void initializer()" overall="49" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1348" lod="0" name="void init_declarator_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="1348" lod="0" method="void init_declarator()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4568" lod="0" name="void initializer()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="4569" lod="0" method="void beginInitializer()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3080" global="0" line="4619" lod="0" method="void remainder_expression()" overall="3080" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="4649" lod="0" method="void endInitializer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="7" global="0" line="347" lod="0" name="boolean isTypeName(java.lang.String)" overall="7"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="3130" global="0" line="6728" lod="0" name="void iteration_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="6932" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6732" lod="0" method="void beginWhileStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3021" global="0" line="6736" lod="0" method="void expression()" overall="3021" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6747" lod="0" method="void beginDoStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6764" lod="0" method="void beginForStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6740" lod="0" method="void endWhileStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6757" lod="0" method="void endDoStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6926" lod="0" method="void endForStatement()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6941" lod="0" name="void jump_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="7081" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6948" lod="0" method="void gotoStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6957" lod="0" method="void continueStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6966" lod="0" method="void breakStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6973" lod="0" method="void beginReturnStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6986" lod="0" method="antlr.SemanticException(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3066" global="0" line="7049" lod="0" method="void expression()" overall="3066" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="7075" lod="0" method="void endReturnStatement()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6613" lod="0" name="void labeled_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="6615" lod="0" method="void statement()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="3177" lod="0" name="void linkage_specification()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2905" global="0" line="3241" lod="0" method="void declaration()" overall="2905" reason="cost from calling non-overridable method"/><cost cyclomatic="181" global="0" line="3188" lod="0" method="void external_declaration()" overall="181" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7408" lod="0" name="void logical_and_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="7408" lod="0" method="void inclusive_or_expression()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7389" lod="0" name="void logical_or_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="7389" lod="0" method="void logical_and_expression()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="2188" lod="0" name="void member_declaration()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="2191" lod="0" method="void beginMemberDeclaration()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="6" global="0" line="2199" lod="0" method="void access_specifier()" overall="6" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2859" lod="0" method="void endMemberDeclaration()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2910" global="0" line="2245" lod="0" method="void declaration()" overall="2910" reason="cost from calling non-overridable method"/><cost cyclomatic="18" global="0" line="2310" lod="0" method="void member_declarator_list()" overall="18" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4801" lod="0" name="void member_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="4821" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3118" global="0" line="4826" lod="0" method="void constant_expression()" overall="3118" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="2866" lod="0" name="void member_declarator_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3122" global="0" line="2866" lod="0" method="void member_declarator()" overall="3122" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="9297" lod="0" name="long[] mk_tokenSet_0()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9302" lod="0" name="long[] mk_tokenSet_1()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9347" lod="0" name="long[] mk_tokenSet_10()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9352" lod="0" name="long[] mk_tokenSet_11()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9357" lod="0" name="long[] mk_tokenSet_12()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9362" lod="0" name="long[] mk_tokenSet_13()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9367" lod="0" name="long[] mk_tokenSet_14()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9372" lod="0" name="long[] mk_tokenSet_15()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9377" lod="0" name="long[] mk_tokenSet_16()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9382" lod="0" name="long[] mk_tokenSet_17()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9387" lod="0" name="long[] mk_tokenSet_18()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9392" lod="0" name="long[] mk_tokenSet_19()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9307" lod="0" name="long[] mk_tokenSet_2()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9397" lod="0" name="long[] mk_tokenSet_20()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9402" lod="0" name="long[] mk_tokenSet_21()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9407" lod="0" name="long[] mk_tokenSet_22()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9412" lod="0" name="long[] mk_tokenSet_23()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9417" lod="0" name="long[] mk_tokenSet_24()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9422" lod="0" name="long[] mk_tokenSet_25()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9427" lod="0" name="long[] mk_tokenSet_26()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9432" lod="0" name="long[] mk_tokenSet_27()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9437" lod="0" name="long[] mk_tokenSet_28()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9442" lod="0" name="long[] mk_tokenSet_29()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9312" lod="0" name="long[] mk_tokenSet_3()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9447" lod="0" name="long[] mk_tokenSet_30()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9452" lod="0" name="long[] mk_tokenSet_31()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9457" lod="0" name="long[] mk_tokenSet_32()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9462" lod="0" name="long[] mk_tokenSet_33()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9467" lod="0" name="long[] mk_tokenSet_34()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9472" lod="0" name="long[] mk_tokenSet_35()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9477" lod="0" name="long[] mk_tokenSet_36()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9482" lod="0" name="long[] mk_tokenSet_37()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9487" lod="0" name="long[] mk_tokenSet_38()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9492" lod="0" name="long[] mk_tokenSet_39()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9317" lod="0" name="long[] mk_tokenSet_4()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9497" lod="0" name="long[] mk_tokenSet_40()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9502" lod="0" name="long[] mk_tokenSet_41()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9507" lod="0" name="long[] mk_tokenSet_42()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9512" lod="0" name="long[] mk_tokenSet_43()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9517" lod="0" name="long[] mk_tokenSet_44()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9522" lod="0" name="long[] mk_tokenSet_45()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9527" lod="0" name="long[] mk_tokenSet_46()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9532" lod="0" name="long[] mk_tokenSet_47()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9537" lod="0" name="long[] mk_tokenSet_48()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9542" lod="0" name="long[] mk_tokenSet_49()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9322" lod="0" name="long[] mk_tokenSet_5()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9547" lod="0" name="long[] mk_tokenSet_50()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9552" lod="0" name="long[] mk_tokenSet_51()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9557" lod="0" name="long[] mk_tokenSet_52()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9562" lod="0" name="long[] mk_tokenSet_53()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9567" lod="0" name="long[] mk_tokenSet_54()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9572" lod="0" name="long[] mk_tokenSet_55()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9577" lod="0" name="long[] mk_tokenSet_56()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9582" lod="0" name="long[] mk_tokenSet_57()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9587" lod="0" name="long[] mk_tokenSet_58()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9592" lod="0" name="long[] mk_tokenSet_59()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9327" lod="0" name="long[] mk_tokenSet_6()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9597" lod="0" name="long[] mk_tokenSet_60()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9602" lod="0" name="long[] mk_tokenSet_61()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9607" lod="0" name="long[] mk_tokenSet_62()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9612" lod="0" name="long[] mk_tokenSet_63()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9617" lod="0" name="long[] mk_tokenSet_64()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9622" lod="0" name="long[] mk_tokenSet_65()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9627" lod="0" name="long[] mk_tokenSet_66()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9632" lod="0" name="long[] mk_tokenSet_67()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9637" lod="0" name="long[] mk_tokenSet_68()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9642" lod="0" name="long[] mk_tokenSet_69()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9332" lod="0" name="long[] mk_tokenSet_7()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9647" lod="0" name="long[] mk_tokenSet_70()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9652" lod="0" name="long[] mk_tokenSet_71()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9657" lod="0" name="long[] mk_tokenSet_72()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9662" lod="0" name="long[] mk_tokenSet_73()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9667" lod="0" name="long[] mk_tokenSet_74()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9672" lod="0" name="long[] mk_tokenSet_75()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9677" lod="0" name="long[] mk_tokenSet_76()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9682" lod="0" name="long[] mk_tokenSet_77()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9687" lod="0" name="long[] mk_tokenSet_78()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9692" lod="0" name="long[] mk_tokenSet_79()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9337" lod="0" name="long[] mk_tokenSet_8()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="1" global="0" line="9342" lod="0" name="long[] mk_tokenSet_9()" overall="1"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="3130" global="0" line="7602" lod="0" name="void multiplicative_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3125" global="0" line="7602" lod="0" method="void pm_expression()" overall="3125" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8862" lod="0" name="void new_declarator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3106" global="0" line="8880" lod="0" method="void ptr_operator()" overall="3106" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="8896" lod="0" method="void direct_new_declarator()" overall="2" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8383" lod="0" name="void new_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2969" global="0" line="8393" lod="0" method="void expression_list()" overall="2969" reason="cost from calling non-overridable method"/><cost cyclomatic="27" global="0" line="8458" lod="0" method="void new_type_id()" overall="27" reason="cost from calling non-overridable method"/><cost cyclomatic="46" global="0" line="8478" lod="0" method="void new_initializer()" overall="46" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8794" lod="0" name="void new_initializer()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3083" global="0" line="8843" lod="0" method="void expression_list()" overall="3083" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8777" lod="0" name="void new_type_id()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3102" global="0" line="8777" lod="0" method="void declaration_specifiers()" overall="3102" reason="cost from calling non-overridable method"/><cost cyclomatic="23" global="0" line="8780" lod="0" method="void new_declarator()" overall="23" reason="cost from calling non-overridable method"/></method><method cyclomatic="85" global="0" line="4399" lod="0" name="void optor()" overall="85"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="36" global="0" line="4483" lod="0" method="void optor_simple_tokclass()" overall="36" reason="cost from calling non-overridable method"/></method><method cyclomatic="37" global="0" line="8946" lod="0" name="void optor_simple_tokclass()" overall="37"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="9129" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5914" lod="0" name="void parameter_declaration()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="5917" lod="0" method="void beginParameterDeclaration()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3103" global="0" line="5959" lod="0" method="void declarator()" overall="3103" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6001" lod="0" method="void endParameterDeclaration()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5895" lod="0" name="void parameter_declaration_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="5895" lod="0" method="void parameter_declaration()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4887" lod="0" name="void parameter_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3127" global="0" line="4887" lod="0" method="void parameter_declaration_list()" overall="3127" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7643" lod="0" name="void pm_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3125" global="0" line="7643" lod="0" method="void cast_expression()" overall="3125" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7955" lod="0" name="void postfix_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="2909" global="0" line="7978" lod="0" method="void simple_type_specifier()" overall="2909" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8131" lod="0" method="void beginPostfixExpression()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="34" global="0" line="8133" lod="0" method="void primary_expression()" overall="34" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8149" lod="0" method="void beginParameterList()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8222" lod="0" method="void beginMemberAccess()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8260" lod="0" method="void endPostfixExpression()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8226" lod="0" method="void endMemberAccess()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8213" lod="0" method="void endParameterList()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8604" lod="0" name="void primary_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="11" global="0" line="8626" lod="0" method="void constant()" overall="11" reason="cost from calling non-overridable method"/><cost cyclomatic="3101" global="0" line="8637" lod="0" method="void expression()" overall="3101" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8611" lod="0" method="void beginPrimaryExpression()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8640" lod="0" method="void endPrimaryExpression()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4988" lod="0" name="void ptr_operator()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="4989" lod="0" method="void beginPtrOperator()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3099" global="0" line="5131" lod="0" method="void ptr_to_member()" overall="3099" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="5141" lod="0" method="void endPtrOperator()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="8929" lod="0" name="void ptr_to_member()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3127" global="0" line="8931" lod="0" method="java.lang.String scope_override()" overall="3127" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="8935" lod="0" method="void ptrToMember(java.lang.String, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="22" global="0" line="75" lod="0" name="java.util.BitSet qualifiedItemIs(int)" overall="22"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="2" global="0" line="38" lod="0" name="boolean qualifiedItemIsOneOf(java.util.BitSet, int)" overall="2"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="3130" global="0" line="5686" lod="0" name="java.lang.String qualified_ctor_id()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3127" global="0" line="5694" lod="0" method="java.lang.String scope_override()" overall="3127" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="2099" lod="0" name="java.lang.String qualified_id()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3114" global="0" line="2107" lod="0" method="java.lang.String scope_override()" overall="3114" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4274" lod="0" name="java.lang.String qualified_type()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3124" global="0" line="4279" lod="0" method="java.lang.String scope_override()" overall="3124" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7520" lod="0" name="void relational_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3123" global="0" line="7520" lod="0" method="void shift_expression()" overall="3123" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4676" lod="0" name="void remainder_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3120" global="0" line="4683" lod="0" method="void conditional_expression()" overall="3120" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1457" lod="0" name="java.lang.String scope_override()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1486" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3112" global="0" line="1501" lod="0" method="void template_argument_list()" overall="3112" reason="cost from calling non-overridable method"/></method><method cyclomatic="4" global="0" line="311" lod="0" name="boolean scopedItem(int)" overall="4"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="3130" global="0" line="6669" lod="0" name="void selection_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="6720" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6673" lod="0" method="void beginIfStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3117" global="0" line="6677" lod="0" method="void expression()" overall="3117" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6706" lod="0" method="void beginSwitchStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6681" lod="0" method="void endIfStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6714" lod="0" method="void endSwitchStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6686" lod="0" method="void beginElseStatement()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6691" lod="0" method="void endElseStatement()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6462" lod="0" name="void shift_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3125" global="0" line="6462" lod="0" method="void additive_expression()" overall="3125" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="3926" lod="0" name="void simple_type_specifier()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3089" global="0" line="3934" lod="0" method="java.lang.String qualified_type()" overall="3089" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="3936" lod="0" method="void simpleTypeSpecifier(java.util.List)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="6" global="0" line="276" lod="0" name="int skipNestedParens(int)" overall="6"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="8" global="0" line="224" lod="0" name="int skipTemplateQualifiers(int)" overall="8"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/></method><method cyclomatic="3130" global="0" line="6518" lod="0" name="void statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="89" global="0" line="6531" lod="0" method="void compound_statement()" overall="89" reason="cost from calling non-overridable method"/><cost cyclomatic="2824" global="0" line="6567" lod="0" method="void throw_statement()" overall="2824" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="6521" lod="0" method="void case_statement()" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="6526" lod="0" method="void default_statement()" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="12" global="0" line="6537" lod="0" method="void selection_statement()" overall="12" reason="cost from calling non-overridable method"/><cost cyclomatic="108" global="0" line="6544" lod="0" method="void iteration_statement()" overall="108" reason="cost from calling non-overridable method"/><cost cyclomatic="63" global="0" line="6552" lod="0" method="void jump_statement()" overall="63" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="6562" lod="0" method="void try_block()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="6573" lod="0" method="void asm_block()" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="6597" lod="0" method="void labeled_statement()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6499" lod="0" name="void statement_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3127" global="0" line="6503" lod="0" method="void statement()" overall="3127" reason="cost from calling non-overridable method"/></method><method cyclomatic="11" global="0" line="3287" lod="0" name="void storage_class_specifier()" overall="11"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="3330" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="3316" lod="0" method="void storageClassSpecifier(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="5729" lod="0" name="void superclass_init()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3083" global="0" line="5731" lod="0" method="java.lang.String qualified_id()" overall="3083" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6445" lod="0" name="void template_argument()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="6454" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3122" global="0" line="6451" lod="0" method="void shift_expression()" overall="3122" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4308" lod="0" name="void template_argument_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="4308" lod="0" method="void template_argument()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="1228" lod="0" name="void template_head()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="1230" lod="0" method="void template_parameter_list()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6437" lod="0" name="void template_id()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="6439" lod="0" method="void template_argument_list()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6338" lod="0" name="void template_parameter()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="6408" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3109" global="0" line="6405" lod="0" method="void parameter_declaration()" overall="3109" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="6371" lod="0" method="void assigned_type_name()" overall="5" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="4868" lod="0" name="void template_parameter_list()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="4868" lod="0" method="void template_parameter()" overall="3128" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7109" lod="0" name="void throw_statement()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3083" global="0" line="7158" lod="0" method="void assignment_expression()" overall="3083" reason="cost from calling non-overridable method"/></method><method cyclomatic="3135" global="0" line="403" lod="0" name="void translation_unit(com.google.test.metric.cpp.Builder)" overall="3135"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="416" lod="0" method="void external_declaration()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7090" lod="0" name="void try_block()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3128" global="0" line="7091" lod="0" method="void compound_statement()" overall="3128" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="7096" lod="0" method="void handler()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="2" global="0" line="4496" lod="0" name="void typeID()" overall="2"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="4497" lod="0" method="antlr.SemanticException(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="6149" lod="0" name="void type_name()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3129" global="0" line="6149" lod="0" method="void declaration_specifiers()" overall="3129" reason="cost from calling non-overridable method"/></method><method cyclomatic="8" global="0" line="3338" lod="0" name="void type_qualifier()" overall="8"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="3375" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="3369" lod="0" method="void typeQualifier(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="3383" lod="0" name="void type_specifier()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1705" global="0" line="3415" lod="0" method="void enum_specifier()" overall="1705" reason="cost from calling non-overridable method"/><cost cyclomatic="1402" global="0" line="3410" lod="0" method="void class_specifier()" overall="1402" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="7852" lod="0" name="void unary_expression()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="7878" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2894" global="0" line="7892" lod="0" method="void postfix_expression()" overall="2894" reason="cost from calling non-overridable method"/><cost cyclomatic="6" global="0" line="7905" lod="0" method="void unary_operator()" overall="6" reason="cost from calling non-overridable method"/><cost cyclomatic="160" global="0" line="7931" lod="0" method="void new_expression()" overall="160" reason="cost from calling non-overridable method"/><cost cyclomatic="46" global="0" line="7936" lod="0" method="void delete_expression()" overall="46" reason="cost from calling non-overridable method"/></method><method cyclomatic="7" global="0" line="8341" lod="0" name="void unary_operator()" overall="7"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="8374" lod="0" method="antlr.NoViableAltException(antlr.Token, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3130" global="0" line="3254" lod="0" name="void using_declaration()" overall="3130"><cost cyclomatic="0" global="0" line="9136" lod="0" method="com.google.test.metric.cpp.InternalParser()" overall="0" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="394" lod="0" method="com.google.test.metric.cpp.InternalParser(antlr.ParserSharedInputState)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="324" lod="0" method="void setASTFactory(antlr.ASTFactory)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="328" lod="0" method="void setASTNodeClass(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="336" lod="0" method="void setASTNodeType(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="1" global="0" line="340" lod="0" method="void setDebugMode(boolean)" overall="1" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="345" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="349" lod="0" method="void setIgnoreInvalidDebugCalls(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="176" lod="0" method="void setInputState(antlr.ParserSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="354" lod="0" method="void setTokenBuffer(antlr.TokenBuffer)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="3122" global="0" line="3272" lod="0" method="java.lang.String qualified_id()" overall="3122" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.cpp.InternalLexer" cost="463"><method cyclomatic="13" global="0" line="2188" lod="0" name="com.google.test.metric.cpp.InternalLexer()" overall="13"><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="2188" lod="0" method="long[] mk_tokenSet_0()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2188" lod="0" method="antlr.collections.impl.BitSet(long[])" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="2195" lod="0" method="long[] mk_tokenSet_1()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="2202" lod="0" method="long[] mk_tokenSet_2()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2207" lod="0" method="long[] mk_tokenSet_3()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2212" lod="0" method="long[] mk_tokenSet_4()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="2219" lod="0" method="long[] mk_tokenSet_5()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="2227" lod="0" method="long[] mk_tokenSet_6()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2232" lod="0" method="long[] mk_tokenSet_7()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="13" global="0" line="44" lod="0" name="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="13"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="44" lod="0" method="antlr.LexerSharedInputState(antlr.InputBuffer)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.LexerSharedInputState)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="13" global="0" line="47" lod="0" name="com.google.test.metric.cpp.InternalLexer(antlr.LexerSharedInputState)" overall="13"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="47" lod="0" method="antlr.CharScanner(antlr.LexerSharedInputState)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="51" lod="0" method="antlr.ANTLRHashString(java.lang.String, antlr.CharScanner)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="38" lod="0" name="com.google.test.metric.cpp.InternalLexer(java.io.InputStream)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="3" global="0" line="38" lod="0" method="antlr.ByteBuffer(java.io.InputStream)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="38" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="41" lod="0" name="com.google.test.metric.cpp.InternalLexer(java.io.Reader)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="3" global="0" line="41" lod="0" method="antlr.CharBuffer(java.io.Reader)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="917" lod="0" name="void mAMPERSAND(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="917" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="924" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="878" lod="0" name="void mAND(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="878" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="885" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="436" lod="0" name="void mASSIGNEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="436" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="443" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="930" lod="0" name="void mBITWISEANDEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="930" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="937" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="956" lod="0" name="void mBITWISEOR(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="956" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="963" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="969" lod="0" name="void mBITWISEOREQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="969" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="976" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="982" lod="0" name="void mBITWISEXOR(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="982" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="989" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="995" lod="0" name="void mBITWISEXOREQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="995" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1002" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="449" lod="0" name="void mCOLON(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="449" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="456" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="462" lod="0" name="void mCOMMA(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="462" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="469" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="25" global="0" line="1205" lod="0" name="void mCPPComment(boolean)" overall="25"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1205" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="7" global="0" line="1224" lod="0" method="void mEndOfLine(boolean)" overall="7" reason="cost from calling non-overridable method"/></method><method cyclomatic="69" global="0" line="1282" lod="0" name="void mCharLiteral(boolean)" overall="69"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1282" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1297" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="48" global="0" line="1289" lod="0" method="void mEscape(boolean)" overall="48" reason="cost from calling non-overridable method"/></method><method cyclomatic="34" global="0" line="1138" lod="0" name="void mComment(boolean)" overall="34"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1138" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="7" global="0" line="1150" lod="0" method="void mEndOfLine(boolean)" overall="7" reason="cost from calling non-overridable method"/></method><method cyclomatic="28" global="0" line="1236" lod="0" name="void mDIRECTIVE(boolean)" overall="28"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1236" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="11" global="0" line="1242" lod="0" method="void mLineDirective(boolean)" overall="11" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="670" lod="0" name="void mDIVIDE(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="670" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="677" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="683" lod="0" name="void mDIVIDEEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="683" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="690" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="1021" lod="0" name="void mDOTMBR(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1021" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1028" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="19" global="0" line="1522" lod="0" name="void mDecimal(boolean)" overall="19"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1522" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1534" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1542" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="1509" lod="0" name="void mDigit(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1509" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1516" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="592" lod="0" name="void mEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="592" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="599" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="20" global="0" line="1178" lod="0" name="void mEndOfLine(boolean)" overall="20"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1178" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1193" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1199" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="61" global="0" line="1310" lod="0" name="void mEscape(boolean)" overall="61"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1310" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1446" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="1379" lod="0" method="void mDigit(boolean)" overall="3" reason="cost from calling non-overridable method"/></method><method cyclomatic="36" global="0" line="1632" lod="0" name="void mExponent(boolean)" overall="36"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1632" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1650" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="1683" lod="0" method="void mDigit(boolean)" overall="3" reason="cost from calling non-overridable method"/></method><method cyclomatic="18" global="0" line="1604" lod="0" name="void mFloatSuffix(boolean)" overall="18"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1604" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1621" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1626" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="657" lod="0" name="void mGREATERTHAN(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="657" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="664" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="644" lod="0" name="void mGREATERTHANOREQUALTO(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="644" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="651" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="132" global="0" line="2091" lod="0" name="void mID(boolean)" overall="132"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="2091" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2126" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="2178" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="566" lod="0" name="void mLCURLY(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="566" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="573" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="631" lod="0" name="void mLESSTHAN(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="631" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="638" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="618" lod="0" name="void mLESSTHANOREQUALTO(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="618" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="625" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="514" lod="0" name="void mLPAREN(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="514" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="521" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="540" lod="0" name="void mLSQUARE(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="540" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="547" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="24" global="0" line="1255" lod="0" name="void mLineDirective(boolean)" overall="24"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1255" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="7" global="0" line="1273" lod="0" method="void mEndOfLine(boolean)" overall="7" reason="cost from calling non-overridable method"/></method><method cyclomatic="18" global="0" line="1548" lod="0" name="void mLongSuffix(boolean)" overall="18"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1548" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1565" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1570" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="735" lod="0" name="void mMINUS(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="735" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="742" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="748" lod="0" name="void mMINUSEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="748" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="755" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="761" lod="0" name="void mMINUSMINUS(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="761" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="768" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="800" lod="0" name="void mMOD(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="800" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="807" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="813" lod="0" name="void mMODEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="813" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="820" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="891" lod="0" name="void mNOT(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="891" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="898" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="605" lod="0" name="void mNOTEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="605" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="612" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="150" global="0" line="1713" lod="0" name="void mNumber(boolean)" overall="150"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1713" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="1775" lod="0" method="void mDigit(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1778" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="20" global="0" line="1816" lod="0" method="void mExponent(boolean)" overall="20" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="1832" lod="0" method="void mFloatSuffix(boolean)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="1837" lod="0" method="void mLongSuffix(boolean)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="2026" lod="0" method="void mUnsignedSuffix(boolean)" overall="5" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="904" lod="0" name="void mOR(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="904" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="911" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="696" lod="0" name="void mPLUS(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="696" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="703" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="709" lod="0" name="void mPLUSEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="709" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="716" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="722" lod="0" name="void mPLUSPLUS(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="722" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="729" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="501" lod="0" name="void mPOINTERTO(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="501" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="508" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="1008" lod="0" name="void mPOINTERTOMBR(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1008" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1015" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="475" lod="0" name="void mQUESTIONMARK(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="475" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="482" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="579" lod="0" name="void mRCURLY(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="579" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="586" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="527" lod="0" name="void mRPAREN(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="527" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="534" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="553" lod="0" name="void mRSQUARE(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="553" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="560" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="1034" lod="0" name="void mSCOPE(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1034" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1041" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="488" lod="0" name="void mSEMICOLON(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="488" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="495" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="852" lod="0" name="void mSHIFTLEFT(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="852" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="859" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="865" lod="0" name="void mSHIFTLEFTEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="865" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="872" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="826" lod="0" name="void mSHIFTRIGHT(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="826" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="833" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="839" lod="0" name="void mSHIFTRIGHTEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="839" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="846" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="774" lod="0" name="void mSTAR(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="774" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="781" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="79" global="0" line="1458" lod="0" name="void mStringLiteral(boolean)" overall="79"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1458" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="48" global="0" line="1467" lod="0" method="void mEscape(boolean)" overall="48" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="943" lod="0" name="void mTILDE(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="943" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="950" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="787" lod="0" name="void mTIMESEQUAL(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="787" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="794" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="18" global="0" line="1576" lod="0" name="void mUnsignedSuffix(boolean)" overall="18"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1576" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1593" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1598" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="16" global="0" line="1700" lod="0" name="void mVocabulary(boolean)" overall="16"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1700" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1707" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="38" global="0" line="1047" lod="0" name="void mWhitespace(boolean)" overall="38"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="1047" lod="0" method="int length()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1123" lod="0" method="antlr.NoViableAltForCharException(char, java.lang.String, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="1132" lod="0" method="char[] getBuffer()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="13" global="0" line="2185" lod="0" name="long[] mk_tokenSet_0()" overall="13"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="13" global="0" line="2190" lod="0" name="long[] mk_tokenSet_1()" overall="13"><cost cyclomatic="3" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="3" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="13" global="0" line="2197" lod="0" name="long[] mk_tokenSet_2()" overall="13"><cost cyclomatic="3" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="3" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="13" global="0" line="2204" lod="0" name="long[] mk_tokenSet_3()" overall="13"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="13" global="0" line="2209" lod="0" name="long[] mk_tokenSet_4()" overall="13"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="13" global="0" line="2214" lod="0" name="long[] mk_tokenSet_5()" overall="13"><cost cyclomatic="3" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="3" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="13" global="0" line="2221" lod="0" name="long[] mk_tokenSet_6()" overall="13"><cost cyclomatic="3" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="3" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="13" global="0" line="2229" lod="0" name="long[] mk_tokenSet_7()" overall="13"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/></method><method cyclomatic="689" global="0" line="135" lod="0" name="antlr.Token nextToken()" overall="689"><cost cyclomatic="4" global="0" line="2188" lod="0" method="com.google.test.metric.cpp.InternalLexer()" overall="4" reason="implicit cost from static initialization"/><cost cyclomatic="0" global="0" line="44" lod="0" method="com.google.test.metric.cpp.InternalLexer(antlr.InputBuffer)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="313" lod="0" method="void setCaseSensitive(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="126" lod="0" method="void setColumn(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="317" lod="0" method="void setCommitToPath(boolean)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="321" lod="0" method="void setFilename(java.lang.String)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="146" lod="0" method="void setInputState(antlr.LexerSharedInputState)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="325" lod="0" method="void setLine(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="0" global="0" line="246" lod="0" method="void setTabSize(int)" overall="0" reason="implicit cost calling all setters"/><cost cyclomatic="4" global="0" line="329" lod="0" method="void setText(java.lang.String)" overall="4" reason="implicit cost calling all setters"/><cost cyclomatic="5" global="0" line="335" lod="0" method="void setTokenObjectClass(java.lang.String)" overall="5" reason="implicit cost calling all setters"/><cost cyclomatic="25" global="0" line="207" lod="0" method="void mWhitespace(boolean)" overall="25" reason="cost from calling non-overridable method"/><cost cyclomatic="66" global="0" line="225" lod="0" method="void mStringLiteral(boolean)" overall="66" reason="cost from calling non-overridable method"/><cost cyclomatic="15" global="0" line="213" lod="0" method="void mDIRECTIVE(boolean)" overall="15" reason="cost from calling non-overridable method"/><cost cyclomatic="8" global="0" line="219" lod="0" method="void mCharLiteral(boolean)" overall="8" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="164" lod="0" method="void mLPAREN(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="170" lod="0" method="void mRPAREN(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="146" lod="0" method="void mCOMMA(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="158" lod="0" method="void mSEMICOLON(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="152" lod="0" method="void mQUESTIONMARK(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="119" global="0" line="244" lod="0" method="void mID(boolean)" overall="119" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="176" lod="0" method="void mLSQUARE(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="182" lod="0" method="void mRSQUARE(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="188" lod="0" method="void mLCURLY(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="194" lod="0" method="void mRCURLY(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="200" lod="0" method="void mTILDE(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="415" lod="0" method="int getType()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="417" lod="0" method="void setType(int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="250" lod="0" method="void mSHIFTRIGHTEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="254" lod="0" method="void mSHIFTLEFTEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="258" lod="0" method="void mPOINTERTOMBR(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="262" lod="0" method="void mPOINTERTO(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="266" lod="0" method="void mEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="270" lod="0" method="void mNOTEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="274" lod="0" method="void mLESSTHANOREQUALTO(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="278" lod="0" method="void mGREATERTHANOREQUALTO(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="282" lod="0" method="void mDIVIDEEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="286" lod="0" method="void mPLUSEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="290" lod="0" method="void mPLUSPLUS(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="294" lod="0" method="void mMINUSEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="298" lod="0" method="void mMINUSMINUS(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="302" lod="0" method="void mTIMESEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="306" lod="0" method="void mMODEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="310" lod="0" method="void mSHIFTRIGHT(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="314" lod="0" method="void mSHIFTLEFT(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="318" lod="0" method="void mAND(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="322" lod="0" method="void mOR(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="326" lod="0" method="void mBITWISEANDEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="330" lod="0" method="void mBITWISEOREQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="334" lod="0" method="void mBITWISEXOREQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="338" lod="0" method="void mDOTMBR(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="342" lod="0" method="void mSCOPE(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="14" global="0" line="346" lod="0" method="void mComment(boolean)" overall="14" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="350" lod="0" method="void mCPPComment(boolean)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="354" lod="0" method="void mASSIGNEQUAL(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="358" lod="0" method="void mCOLON(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="362" lod="0" method="void mLESSTHAN(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="366" lod="0" method="void mGREATERTHAN(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="370" lod="0" method="void mDIVIDE(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="374" lod="0" method="void mPLUS(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="378" lod="0" method="void mMINUS(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="382" lod="0" method="void mSTAR(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="386" lod="0" method="void mMOD(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="390" lod="0" method="void mNOT(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="394" lod="0" method="void mAMPERSAND(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="398" lod="0" method="void mBITWISEOR(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="402" lod="0" method="void mBITWISEXOR(boolean)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="134" global="0" line="406" lod="0" method="void mNumber(boolean)" overall="134" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="421" lod="0" method="antlr.TokenStreamRecognitionException(antlr.RecognitionException)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="426" lod="0" method="antlr.TokenStreamIOException(java.io.IOException)" overall="0" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.JavaClassRepository" cost="320"><method cyclomatic="0" global="0" line="33" lod="0" name="com.google.test.metric.JavaClassRepository()" overall="0"/><method cyclomatic="0" global="0" line="36" lod="0" name="com.google.test.metric.JavaClassRepository(com.google.classpath.ClassPath)" overall="0"/><method cyclomatic="0" global="0" line="88" lod="0" name="void addClass(com.google.test.metric.ClassInfo)" overall="0"><cost cyclomatic="0" global="0" line="36" lod="0" method="com.google.test.metric.JavaClassRepository(com.google.classpath.ClassPath)" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="324" global="0" line="41" lod="0" name="com.google.test.metric.ClassInfo getClass(java.lang.String)" overall="324"><cost cyclomatic="0" global="0" line="36" lod="0" method="com.google.test.metric.JavaClassRepository(com.google.classpath.ClassPath)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="3" global="0" line="47" lod="0" method="java.io.InputStream inputStreamForClass(java.lang.String)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="318" global="0" line="47" lod="0" method="com.google.test.metric.ClassInfo parseClass(java.io.InputStream)" overall="318" reason="cost from calling non-overridable method"/></method><method cyclomatic="3" global="0" line="56" lod="0" name="java.io.InputStream inputStreamForClass(java.lang.String)" overall="3"><cost cyclomatic="0" global="0" line="36" lod="0" method="com.google.test.metric.JavaClassRepository(com.google.classpath.ClassPath)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="68" lod="0" method="com.google.test.metric.ClassNotFoundException(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="318" global="0" line="75" lod="0" name="com.google.test.metric.ClassInfo parseClass(java.io.InputStream)" overall="318"><cost cyclomatic="0" global="0" line="36" lod="0" method="com.google.test.metric.JavaClassRepository(com.google.classpath.ClassPath)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="15" global="0" line="75" lod="0" method="org.objectweb.asm.ClassReader(java.io.InputStream)" overall="15" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="76" lod="0" method="com.google.test.metric.asm.ClassInfoBuilderVisitor(com.google.test.metric.ClassRepository)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="302" global="0" line="77" lod="0" method="void accept(org.objectweb.asm.ClassVisitor, int)" overall="302" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="78" lod="0" method="com.google.test.metric.ClassInfo getClassInfo()" overall="0" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.Testability" cost="218"><method cyclomatic="2" global="0" line="118" lod="0" name="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2"><cost cyclomatic="2" global="0" line="71" lod="0" method="com.google.test.metric.RegExpWhiteList(java.lang.String[])" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="121" lod="0" method="void addPackage(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="6" global="0" line="261" lod="0" name="java.util.SortedSet collectClassNamesToEnter(java.util.List)" overall="6"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/></method><method cyclomatic="3" global="0" line="197" lod="0" name="void ensureEntryListIsNotEmpty()" overall="3"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/></method><method cyclomatic="106" global="7" line="237" lod="0" name="com.google.test.metric.report.Report execute()" overall="176"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/><cost cyclomatic="42" global="7" line="237" lod="0" method="void postParse()" overall="112" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="238" lod="0" method="com.google.test.metric.JavaClassRepository(com.google.classpath.ClassPath)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="239" lod="0" method="com.google.test.metric.CostModel(double, double)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="240" lod="0" method="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="243" lod="0" method="void printHeader()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="243" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="256" lod="0" method="void printFooter()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="256" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="4" global="0" line="246" lod="0" method="boolean isClassWhiteListed(java.lang.String)" overall="4" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="246" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="247" lod="0" method="com.google.test.metric.ClassInfo getClass(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="55" global="0" line="248" lod="0" method="com.google.test.metric.ClassCost compute(com.google.test.metric.ClassInfo)" overall="55" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="249" lod="0" method="void addClassCost(com.google.test.metric.ClassCost)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="249" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="253" lod="0" method="java.lang.String getClassName()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="253" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="256" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="246" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="249" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method><method cyclomatic="12" global="0" line="211" lod="0" name="com.google.classpath.ClassPath getClassPath()" overall="12"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="211" lod="0" method="com.google.classpath.ClassPathFactory()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="10" global="0" line="211" lod="0" method="com.google.classpath.ClassPath createFromPath(java.lang.String)" overall="10" reason="cost from calling non-overridable method"/></method><method cyclomatic="3" global="0" line="227" lod="0" name="java.util.Comparator getGroupingComparator()" overall="3"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="228" lod="0" method="com.google.test.metric.ClassCost$PackageComparator()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="230" lod="0" method="com.google.test.metric.ClassCost$CostComparator()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="29" global="7" line="169" lod="0" name="com.google.test.metric.report.Report getReportPrinter(java.util.Comparator)" overall="99"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="171" lod="0" method="com.google.test.metric.report.TextReport(java.io.PrintStream, int, int, int, java.util.Comparator)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="173" lod="0" method="com.google.test.metric.report.SourceLinker(java.lang.String, java.lang.String)" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="174" lod="0" method="com.google.test.metric.report.DetailHtmlReport(java.io.PrintStream, com.google.test.metric.report.SourceLinkGenerator, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="177" lod="0" method="com.google.test.metric.report.HtmlReport(java.io.PrintStream, int, int, int, com.google.test.metric.report.DetailHtmlReport, java.util.Comparator)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="179" lod="0" method="com.google.test.metric.report.DrillDownReport(java.io.PrintStream, java.util.List, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="182" lod="0" method="com.google.test.metric.report.PropertiesReport(java.io.OutputStream, int, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="184" lod="0" method="com.sun.org.apache.xml.internal.serialize.XMLSerializer()" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="18" global="7" line="185" lod="0" method="void setOutputByteStream(java.io.OutputStream)" overall="88" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="187" lod="0" method="com.google.test.metric.report.XMLReport(org.xml.sax.ContentHandler, int, int, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="189" lod="0" method="org.kohsuke.args4j.CmdLineException(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3" global="0" line="215" lod="0" name="java.util.List getTemplates()" overall="3"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/></method><method cyclomatic="4" global="0" line="203" lod="0" name="com.google.test.metric.RegExpWhiteList getWhiteList()" overall="4"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/></method><method cyclomatic="191" global="8" line="129" lod="0" name="void main(java.io.PrintStream, java.io.PrintStream, java.lang.String[])" overall="271"><cost cyclomatic="2" global="0" line="129" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="80" global="1" line="131" lod="0" method="void parseArgs(java.lang.String[])" overall="90" reason="cost from calling non-overridable method"/><cost cyclomatic="108" global="7" line="132" lod="0" method="com.google.test.metric.report.Report execute()" overall="178" reason="cost from calling non-overridable method"/></method><method cyclomatic="191" global="8" line="125" lod="0" name="void main(java.lang.String[])" overall="271"><cost cyclomatic="191" global="8" line="125" lod="0" method="void main(java.io.PrintStream, java.io.PrintStream, java.lang.String[])" overall="271" reason="cost from calling non-overridable method"/></method><method cyclomatic="82" global="1" line="138" lod="0" name="void parseArgs(java.lang.String[])" overall="92"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/><cost cyclomatic="32" global="1" line="138" lod="0" method="org.kohsuke.args4j.CmdLineParser(java.lang.Object)" overall="42" reason="cost from calling non-overridable method"/><cost cyclomatic="23" global="0" line="140" lod="0" method="void parseArgument(java.lang.String[])" overall="23" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="149" lod="0" method="java.lang.String getMessage()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="150" lod="0" method="void setUsageWidth(int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="22" global="0" line="151" lod="0" method="void printUsage(java.io.OutputStream)" overall="22" reason="cost from calling non-overridable method"/></method><method cyclomatic="44" global="7" line="158" lod="0" name="void postParse()" overall="114"><cost cyclomatic="2" global="0" line="118" lod="0" method="com.google.test.metric.Testability(java.io.PrintStream, java.io.PrintStream)" overall="2" reason="implicit cost from construction"/><cost cyclomatic="1" global="0" line="158" lod="0" method="void ensureEntryListIsNotEmpty()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="160" lod="0" method="com.google.test.metric.RegExpWhiteList getWhiteList()" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="161" lod="0" method="java.util.List getTemplates()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="10" global="0" line="162" lod="0" method="com.google.classpath.ClassPath getClassPath()" overall="10" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="163" lod="0" method="java.util.Comparator getGroupingComparator()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="27" global="7" line="164" lod="0" method="com.google.test.metric.report.Report getReportPrinter(java.util.Comparator)" overall="97" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.report.ReportDiffer" cost="91"><method cyclomatic="0" global="0" line="25" lod="0" name="com.google.test.metric.report.ReportDiffer()" overall="0"/><method cyclomatic="9" global="0" line="41" lod="0" name="void doDiff()" overall="9"><cost cyclomatic="0" global="0" line="25" lod="0" method="com.google.test.metric.report.ReportDiffer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.report.PropertiesReportDiffer(java.io.InputStream, java.io.InputStream)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="6" global="0" line="42" lod="0" method="com.google.test.metric.report.Diff diff()" overall="6" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="43" lod="0" method="void print(java.io.PrintStream)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="43" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method><method cyclomatic="87" global="1" line="34" lod="0" name="void main(java.lang.String[])" overall="97"><cost cyclomatic="0" global="0" line="34" lod="0" method="com.google.test.metric.report.ReportDiffer()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="78" global="1" line="35" lod="0" method="void parseArgs(java.lang.String[])" overall="88" reason="cost from calling non-overridable method"/><cost cyclomatic="9" global="0" line="36" lod="0" method="void doDiff()" overall="9" reason="cost from calling non-overridable method"/></method><method cyclomatic="78" global="1" line="47" lod="0" name="void parseArgs(java.lang.String[])" overall="88"><cost cyclomatic="0" global="0" line="25" lod="0" method="com.google.test.metric.report.ReportDiffer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="32" global="1" line="47" lod="0" method="org.kohsuke.args4j.CmdLineParser(java.lang.Object)" overall="42" reason="cost from calling non-overridable method"/><cost cyclomatic="23" global="0" line="49" lod="0" method="void parseArgument(java.lang.String[])" overall="23" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="51" lod="0" method="java.lang.String getMessage()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="52" lod="0" method="void setUsageWidth(int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="22" global="0" line="53" lod="0" method="void printUsage(java.io.OutputStream)" overall="22" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.asm.MethodVisitorBuilder" cost="63"><method cyclomatic="43" global="0" line="81" lod="0" name="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43"><cost cyclomatic="0" global="0" line="69" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="92" lod="0" method="com.google.test.metric.Type fromJava(java.lang.String)" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="4" global="0" line="93" lod="0" method="com.google.test.metric.LocalVariableInfo(java.lang.String, com.google.test.metric.Type)" overall="4" reason="cost from calling non-overridable method"/><cost cyclomatic="32" global="0" line="97" lod="0" method="com.google.test.metric.asm.SignatureParser parse(java.lang.String)" overall="32" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="97" lod="0" method="java.util.List getParameters()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="97" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="98" lod="0" method="com.google.test.metric.ParameterInfo(java.lang.String, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="101" lod="0" method="boolean isDoubleSlot()" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="101" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method><method cyclomatic="43" global="0" line="756" lod="0" name="void _return(com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="756" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$25(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="69" lod="0" name="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0"/><method cyclomatic="0" global="0" line="75" lod="0" name="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0"/><method cyclomatic="0" global="0" line="76" lod="0" name="void access$2(com.google.test.metric.asm.MethodVisitorBuilder, int)" overall="0"/><method cyclomatic="0" global="0" line="75" lod="0" name="void access$3(com.google.test.metric.asm.MethodVisitorBuilder, int)" overall="0"/><method cyclomatic="11" global="0" line="369" lod="0" name="com.google.test.metric.Variable access$4(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="11"><cost cyclomatic="11" global="0" line="369" lod="0" method="com.google.test.metric.Variable variable(int, com.google.test.metric.Type)" overall="11" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="748" lod="0" name="void convert(com.google.test.metric.Type, com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="748" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$24(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.Type, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="362" lod="0" name="void load(int, com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="362" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$11(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="780" lod="0" name="void loadConstant(int, com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="780" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$28(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="885" lod="0" name="void newArray(int, com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="885" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$31(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="740" lod="0" name="void operation(java.lang.String, com.google.test.metric.Type, com.google.test.metric.Type, com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="740" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$23(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.String, com.google.test.metric.Type, com.google.test.metric.Type, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="764" lod="0" name="void recordArrayLoad(com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="764" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$26(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="772" lod="0" name="void recordArrayStore(com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="772" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$27(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="354" lod="0" name="void store(int, com.google.test.metric.Type)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="354" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$10(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="912" lod="0" name="java.lang.String toString()" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="51" global="0" line="862" lod="0" name="com.google.test.metric.Type toType(int)" overall="51"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="50" global="0" line="370" lod="0" name="com.google.test.metric.Variable variable(int, com.google.test.metric.Type)" overall="50"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="377" lod="0" method="com.google.test.metric.Type getType()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="378" lod="0" method="boolean equals(java.lang.Object)" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="378" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="1" global="0" line="378" lod="0" method="boolean isPrimitive()" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="378" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method><method cyclomatic="43" global="0" line="819" lod="0" name="org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="43" global="0" line="823" lod="0" name="org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="43" global="0" line="827" lod="0" name="void visitAttribute(org.objectweb.asm.Attribute)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="43" global="0" line="830" lod="0" name="void visitCode()" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="95" global="0" line="258" lod="0" name="void visitEnd()" overall="95"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="18" global="0" line="261" lod="0" method="void decomposeIntoBlocks()" overall="18" reason="cost from calling non-overridable method"/><cost cyclomatic="32" global="0" line="265" lod="0" method="java.util.List getOperations()" overall="32" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="263" lod="0" method="com.google.test.metric.MethodInfo(com.google.test.metric.ClassInfo, java.lang.String, int, java.lang.String, com.google.test.metric.Variable, java.util.List, java.util.List, com.google.test.metric.asm.Visibility, long, java.util.List, boolean)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="47" global="0" line="789" lod="0" name="void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)" overall="47"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="797" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$GetFieldRunnable(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.ClassRepository, java.lang.String, java.lang.String, java.lang.String, boolean)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="791" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$PutFieldRunnable(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.ClassRepository, java.lang.String, java.lang.String, java.lang.String, boolean)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="834" lod="0" name="void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="43" global="0" line="837" lod="0" name="void visitIincInsn(int, int)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="837" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$30(com.google.test.metric.asm.MethodVisitorBuilder, int, int)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="150" global="0" line="406" lod="0" name="void visitInsn(int)" overall="150"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="730" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$22(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="408" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$14(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="421" lod="0" method="void loadConstant(int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="437" lod="0" method="void recordArrayLoad(com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="462" lod="0" method="void recordArrayStore(com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="487" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$15(com.google.test.metric.asm.MethodVisitorBuilder, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="496" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$16(com.google.test.metric.asm.MethodVisitorBuilder, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="506" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$17(com.google.test.metric.asm.MethodVisitorBuilder, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="513" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$18(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="617" lod="0" method="void operation(java.lang.String, com.google.test.metric.Type, com.google.test.metric.Type, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="692" lod="0" method="void convert(com.google.test.metric.Type, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="520" lod="0" method="void _return(com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="713" lod="0" method="com.google.test.metric.Type toArray()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="535" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$19(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="716" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$20(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="723" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$21(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="54" global="0" line="846" lod="0" name="void visitIntInsn(int, int)" overall="54"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="851" lod="0" method="void loadConstant(int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="8" global="0" line="848" lod="0" method="com.google.test.metric.Type toType(int)" overall="8" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="848" lod="0" method="void newArray(int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="45" global="0" line="108" lod="0" name="void visitJumpInsn(int, org.objectweb.asm.Label)" overall="45"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="109" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$1(com.google.test.metric.asm.MethodVisitorBuilder, org.objectweb.asm.Label)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="116" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$2(com.google.test.metric.asm.MethodVisitorBuilder, org.objectweb.asm.Label)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="123" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$3(com.google.test.metric.asm.MethodVisitorBuilder, int, org.objectweb.asm.Label)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="389" lod="0" name="void visitLabel(org.objectweb.asm.Label)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="389" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$12(com.google.test.metric.asm.MethodVisitorBuilder, org.objectweb.asm.Label)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="397" lod="0" name="void visitLdcInsn(java.lang.Object)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="397" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$13(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.Object)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="247" lod="0" name="void visitLineNumber(int, org.objectweb.asm.Label)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="247" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$7(com.google.test.metric.asm.MethodVisitorBuilder, int)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="55" global="0" line="235" lod="0" name="void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.objectweb.asm.Label, org.objectweb.asm.Label, int)" overall="55"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="11" global="0" line="235" lod="0" method="com.google.test.metric.Type fromDesc(java.lang.String)" overall="11" reason="cost from calling non-overridable method"/></method><method cyclomatic="45" global="0" line="220" lod="0" name="void visitLookupSwitchInsn(org.objectweb.asm.Label, int[], org.objectweb.asm.Label[])" overall="45"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="225" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$6(com.google.test.metric.asm.MethodVisitorBuilder, org.objectweb.asm.Label, org.objectweb.asm.Label[])" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="894" lod="0" name="void visitMaxs(int, int)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="43" global="0" line="807" lod="0" name="void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="808" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="809" lod="0" method="com.google.test.metric.Type getReturnType()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="809" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="0" global="0" line="810" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$29(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.String, java.lang.String, java.lang.String, java.util.List, int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="897" lod="0" name="void visitMultiANewArrayInsn(java.lang.String, int)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="897" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$32(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.String, int)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="43" global="0" line="907" lod="0" name="org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)" overall="43"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/></method><method cyclomatic="45" global="0" line="205" lod="0" name="void visitTableSwitchInsn(int, int, org.objectweb.asm.Label, org.objectweb.asm.Label[])" overall="45"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="210" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$5(com.google.test.metric.asm.MethodVisitorBuilder, org.objectweb.asm.Label, org.objectweb.asm.Label[])" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="44" global="0" line="193" lod="0" name="void visitTryCatchBlock(org.objectweb.asm.Label, org.objectweb.asm.Label, org.objectweb.asm.Label, java.lang.String)" overall="44"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="196" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$4(com.google.test.metric.asm.MethodVisitorBuilder, org.objectweb.asm.Label, org.objectweb.asm.Label, org.objectweb.asm.Label, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="56" global="0" line="274" lod="0" name="void visitTypeInsn(int, java.lang.String)" overall="56"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="11" global="0" line="278" lod="0" method="com.google.test.metric.Type fromDesc(java.lang.String)" overall="11" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="280" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$8(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="54" global="0" line="308" lod="0" name="void visitVarInsn(int, int)" overall="54"><cost cyclomatic="43" global="0" line="81" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="310" lod="0" method="void load(int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="326" lod="0" method="void store(int, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="342" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$9(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.asm.ClassInfoBuilderVisitor" cost="41"><method cyclomatic="0" global="0" line="33" lod="0" name="com.google.test.metric.asm.ClassInfoBuilderVisitor(com.google.test.metric.ClassRepository)" overall="0"><cost cyclomatic="0" global="0" line="33" lod="0" method="com.google.test.metric.asm.NoopClassVisitor()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="69" lod="0" name="com.google.test.metric.ClassInfo getClassInfo()" overall="0"><cost cyclomatic="0" global="0" line="33" lod="0" method="com.google.test.metric.asm.ClassInfoBuilderVisitor(com.google.test.metric.ClassRepository)" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="3" global="0" line="40" lod="0" name="void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])" overall="3"><cost cyclomatic="0" global="0" line="33" lod="0" method="com.google.test.metric.asm.ClassInfoBuilderVisitor(com.google.test.metric.ClassRepository)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="48" lod="0" method="com.google.test.metric.ClassInfo(java.lang.String, boolean, com.google.test.metric.ClassInfo, java.util.List)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="22" global="0" line="64" lod="0" name="org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)" overall="22"><cost cyclomatic="0" global="0" line="33" lod="0" method="com.google.test.metric.asm.ClassInfoBuilderVisitor(com.google.test.metric.ClassRepository)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="22" global="0" line="64" lod="0" method="com.google.test.metric.asm.FieldVisitorBuilder(com.google.test.metric.ClassInfo, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)" overall="22" reason="cost from calling non-overridable method"/></method><method cyclomatic="48" global="0" line="55" lod="0" name="org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])" overall="48"><cost cyclomatic="0" global="0" line="33" lod="0" method="com.google.test.metric.asm.ClassInfoBuilderVisitor(com.google.test.metric.ClassRepository)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="3" global="0" line="58" lod="0" method="com.google.test.metric.asm.Visibility valueOf(int)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="43" global="0" line="57" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder(com.google.test.metric.ClassRepository, com.google.test.metric.ClassInfo, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean, com.google.test.metric.asm.Visibility)" overall="43" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.asm.SignatureParser" cost="27"><method cyclomatic="0" global="0" line="26" lod="0" name="com.google.test.metric.asm.SignatureParser()" overall="0"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.NoopSignatureVisitor()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="60" lod="0" name="java.util.List access$0(com.google.test.metric.asm.SignatureParser)" overall="0"/><method cyclomatic="0" global="0" line="61" lod="0" name="void access$1(com.google.test.metric.asm.SignatureParser, com.google.test.metric.Type)" overall="0"/><method cyclomatic="0" global="0" line="97" lod="0" name="java.util.List getParameters()" overall="0"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="0" global="0" line="101" lod="0" name="com.google.test.metric.Type getReturnType()" overall="0"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="32" global="0" line="105" lod="0" name="com.google.test.metric.asm.SignatureParser parse(java.lang.String)" overall="32"><cost cyclomatic="0" global="0" line="105" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="106" lod="0" method="org.objectweb.asm.signature.SignatureReader(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="32" global="0" line="106" lod="0" method="void accept(org.objectweb.asm.signature.SignatureVisitor)" overall="32" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="65" lod="0" name="org.objectweb.asm.signature.SignatureVisitor visitArrayType()" overall="0"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="65" lod="0" method="com.google.test.metric.asm.SignatureParser$1(com.google.test.metric.asm.SignatureParser)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="65" lod="0" method="com.google.test.metric.asm.SignatureParser$TypeVisitor(com.google.test.metric.asm.SignatureParser$Setter)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="12" global="0" line="74" lod="0" name="void visitBaseType(char)" overall="12"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="12" global="0" line="74" lod="0" method="com.google.test.metric.Type fromDesc(java.lang.String)" overall="12" reason="cost from calling non-overridable method"/></method><method cyclomatic="2" global="0" line="79" lod="0" name="void visitClassType(java.lang.String)" overall="2"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="2" global="0" line="79" lod="0" method="com.google.test.metric.Type fromJava(java.lang.String)" overall="2" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="84" lod="0" name="org.objectweb.asm.signature.SignatureVisitor visitParameterType()" overall="0"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="0" global="0" line="89" lod="0" name="org.objectweb.asm.signature.SignatureVisitor visitReturnType()" overall="0"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.SignatureParser()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="89" lod="0" method="com.google.test.metric.asm.SignatureParser$2(com.google.test.metric.asm.SignatureParser)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="89" lod="0" method="com.google.test.metric.asm.SignatureParser$TypeVisitor(com.google.test.metric.asm.SignatureParser$Setter)" overall="0" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.method.BlockDecomposer" cost="23"><method cyclomatic="0" global="0" line="41" lod="0" name="com.google.test.metric.method.BlockDecomposer()" overall="0"/><method cyclomatic="0" global="0" line="109" lod="0" name="java.util.Map access$0(com.google.test.metric.method.BlockDecomposer)" overall="0"/><method cyclomatic="0" global="0" line="112" lod="0" name="java.util.List access$1(com.google.test.metric.method.BlockDecomposer)" overall="0"/><method cyclomatic="5" global="0" line="120" lod="0" name="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="1" global="0" line="120" lod="0" method="com.google.test.metric.method.BlockDecomposer$Frame(com.google.test.metric.method.BlockDecomposer$Frame, com.google.test.metric.method.op.stack.StackOperation, org.objectweb.asm.Label)" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="128" lod="0" method="void applyLastLabel()" overall="1" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="132" lod="0" name="void applyLastLabel()" overall="1"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="134" lod="0" method="void access$0(com.google.test.metric.method.BlockDecomposer$Frame, org.objectweb.asm.Label)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="3" global="0" line="203" lod="0" name="void breakIntoBlocks()" overall="3"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="209" lod="0" method="org.objectweb.asm.Label access$1(com.google.test.metric.method.BlockDecomposer$Frame)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="212" lod="0" method="com.google.test.metric.method.BlockDecomposer$Frame access$2(com.google.test.metric.method.BlockDecomposer$Frame)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="155" lod="0" name="void conditionalGoto(org.objectweb.asm.Label)" overall="1"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="1" global="0" line="157" lod="0" method="void applyLastLabel()" overall="1" reason="cost from calling non-overridable method"/></method><method cyclomatic="7" global="0" line="217" lod="0" name="void copyToBlocks()" overall="7"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="224" lod="0" method="org.objectweb.asm.Label access$1(com.google.test.metric.method.BlockDecomposer$Frame)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="229" lod="0" method="com.google.test.metric.method.Block(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="231" lod="0" method="java.lang.String getId()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="236" lod="0" method="com.google.test.metric.method.op.stack.StackOperation access$3(com.google.test.metric.method.BlockDecomposer$Frame)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="240" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="244" lod="0" method="com.google.test.metric.method.BlockDecomposer$Frame access$2(com.google.test.metric.method.BlockDecomposer$Frame)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="18" global="0" line="191" lod="0" name="void decomposeIntoBlocks()" overall="18"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="3" global="0" line="192" lod="0" method="void breakIntoBlocks()" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="7" global="0" line="193" lod="0" method="void copyToBlocks()" overall="7" reason="cost from calling non-overridable method"/><cost cyclomatic="6" global="0" line="194" lod="0" method="void linkBlocks()" overall="6" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="278" lod="0" name="com.google.test.metric.method.Block getBlock(org.objectweb.asm.Label)" overall="0"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="0" global="0" line="310" lod="0" name="java.util.List getExceptionHandlerBlocks()" overall="0"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="0" global="0" line="282" lod="0" name="com.google.test.metric.method.Block getMainBlock()" overall="0"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="32" global="0" line="266" lod="0" name="java.util.List getOperations()" overall="32"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="270" lod="0" method="com.google.test.metric.method.Stack2Turing(com.google.test.metric.method.Block)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="30" global="0" line="270" lod="0" method="java.util.List translate()" overall="30" reason="cost from calling non-overridable method"/></method><method cyclomatic="2" global="0" line="161" lod="0" name="void jumpSubroutine(org.objectweb.asm.Label, int)" overall="2"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="163" lod="0" method="com.google.test.metric.method.Block(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="165" lod="0" method="com.google.test.metric.method.op.stack.JSR(int, com.google.test.metric.method.Block)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="167" lod="0" method="void applyLastLabel()" overall="1" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="140" lod="0" name="void label(org.objectweb.asm.Label)" overall="1"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="6" global="0" line="249" lod="0" name="void linkBlocks()" overall="6"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="250" lod="0" method="com.google.test.metric.method.BlockDecomposer$Frame access$2(com.google.test.metric.method.BlockDecomposer$Frame)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="255" lod="0" method="void addNextBlock(com.google.test.metric.method.Block)" overall="2" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="183" lod="0" name="void tableSwitch(org.objectweb.asm.Label, org.objectweb.asm.Label[])" overall="1"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="1" global="0" line="187" lod="0" method="void applyLastLabel()" overall="1" reason="cost from calling non-overridable method"/></method><method cyclomatic="4" global="0" line="287" lod="0" name="java.lang.String toString()" overall="4"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="292" lod="0" method="com.google.test.metric.method.BlockDecomposer$Frame access$2(com.google.test.metric.method.BlockDecomposer$Frame)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="172" lod="0" name="void tryCatchBlock(org.objectweb.asm.Label, org.objectweb.asm.Label, org.objectweb.asm.Label, java.lang.String)" overall="0"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="172" lod="0" method="com.google.test.metric.method.BlockDecomposer$1(com.google.test.metric.method.BlockDecomposer, org.objectweb.asm.Label, java.lang.String)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="148" lod="0" name="void unconditionalGoto(org.objectweb.asm.Label)" overall="1"><cost cyclomatic="0" global="0" line="41" lod="0" method="com.google.test.metric.method.BlockDecomposer()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="1" global="0" line="151" lod="0" method="void applyLastLabel()" overall="1" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.asm.FieldVisitorBuilder" cost="22"><method cyclomatic="22" global="0" line="26" lod="0" name="com.google.test.metric.asm.FieldVisitorBuilder(com.google.test.metric.ClassInfo, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)" overall="22"><cost cyclomatic="0" global="0" line="26" lod="0" method="com.google.test.metric.asm.NoopFieldVisitor()" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="3" global="0" line="29" lod="0" method="com.google.test.metric.asm.Visibility valueOf(int)" overall="3" reason="cost from calling non-overridable method"/><cost cyclomatic="12" global="0" line="31" lod="0" method="com.google.test.metric.Type fromDesc(java.lang.String)" overall="12" reason="cost from calling non-overridable method"/><cost cyclomatic="4" global="0" line="33" lod="0" method="com.google.test.metric.FieldInfo(com.google.test.metric.ClassInfo, java.lang.String, com.google.test.metric.Type, boolean, boolean, boolean)" overall="4" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.asm.MethodVisitorBuilder$GetFieldRunnable" cost="22"><method cyclomatic="0" global="0" line="960" lod="0" name="com.google.test.metric.asm.MethodVisitorBuilder$GetFieldRunnable(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.ClassRepository, java.lang.String, java.lang.String, java.lang.String, boolean)" overall="0"/><method cyclomatic="22" global="0" line="963" lod="0" name="void run()" overall="22"><cost cyclomatic="0" global="0" line="960" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$GetFieldRunnable(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.ClassRepository, java.lang.String, java.lang.String, java.lang.String, boolean)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="971" lod="0" method="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="971" lod="0" method="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="971" lod="0" method="com.google.test.metric.method.op.stack.GetField(int, com.google.test.metric.FieldInfo)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="971" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="971" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="12" global="0" line="969" lod="0" method="com.google.test.metric.Type fromDesc(java.lang.String)" overall="12" reason="cost from calling non-overridable method"/><cost cyclomatic="4" global="0" line="968" lod="0" method="com.google.test.metric.FieldInfo(com.google.test.metric.ClassInfo, java.lang.String, com.google.test.metric.Type, boolean, boolean, boolean)" overall="4" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="971" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method></class><class class="com.google.test.metric.asm.MethodVisitorBuilder$PutFieldRunnable" cost="22"><method cyclomatic="0" global="0" line="929" lod="0" name="com.google.test.metric.asm.MethodVisitorBuilder$PutFieldRunnable(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.ClassRepository, java.lang.String, java.lang.String, java.lang.String, boolean)" overall="0"/><method cyclomatic="22" global="0" line="932" lod="0" name="void run()" overall="22"><cost cyclomatic="0" global="0" line="929" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$PutFieldRunnable(com.google.test.metric.asm.MethodVisitorBuilder, com.google.test.metric.ClassRepository, java.lang.String, java.lang.String, java.lang.String, boolean)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="941" lod="0" method="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="942" lod="0" method="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="942" lod="0" method="com.google.test.metric.method.op.stack.PutField(int, com.google.test.metric.FieldInfo)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="941" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="941" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/><cost cyclomatic="12" global="0" line="939" lod="0" method="com.google.test.metric.Type fromDesc(java.lang.String)" overall="12" reason="cost from calling non-overridable method"/><cost cyclomatic="4" global="0" line="938" lod="0" method="com.google.test.metric.FieldInfo(com.google.test.metric.ClassInfo, java.lang.String, com.google.test.metric.Type, boolean, boolean, boolean)" overall="4" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="941" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method></class><class class="com.google.test.metric.asm.MethodVisitorBuilder$13" cost="20"><method cyclomatic="0" global="0" line="1" lod="0" name="com.google.test.metric.asm.MethodVisitorBuilder$13(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.Object)" overall="0"/><method cyclomatic="20" global="0" line="399" lod="0" name="void run()" overall="20"><cost cyclomatic="0" global="0" line="1" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$13(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.Object)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="399" lod="0" method="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="399" lod="0" method="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="11" global="0" line="399" lod="0" method="com.google.test.metric.Type fromClass(java.lang.Class)" overall="11" reason="cost from calling non-overridable method"/><cost cyclomatic="4" global="0" line="399" lod="0" method="com.google.test.metric.method.Constant(java.lang.Object, com.google.test.metric.Type)" overall="4" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="399" lod="0" method="com.google.test.metric.method.op.stack.Load(int, com.google.test.metric.Variable)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="399" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="399" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method></class><class class="com.google.test.metric.MetricComputer" cost="18"><method cyclomatic="0" global="0" line="31" lod="0" name="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0"/><method cyclomatic="3" global="0" line="97" lod="0" name="void addConstructorCost(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="3"><cost cyclomatic="0" global="0" line="31" lod="0" method="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="2" global="0" line="110" lod="0" name="void addFieldCost(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="2"><cost cyclomatic="0" global="0" line="31" lod="0" method="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="111" lod="0" method="boolean isPrivate()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="86" lod="0" name="void addSetterInjection(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="1"><cost cyclomatic="0" global="0" line="31" lod="0" method="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="3" global="0" line="119" lod="0" name="void addStaticInitializationCost(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="3"><cost cyclomatic="0" global="0" line="31" lod="0" method="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="123" lod="0" method="java.lang.String getName()" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="1" global="0" line="48" lod="0" name="com.google.test.metric.ClassCost compute(com.google.test.metric.ClassInfo)" overall="1"><cost cyclomatic="0" global="0" line="31" lod="0" method="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="52" lod="0" method="com.google.test.metric.ClassCost(java.lang.String, java.util.List, com.google.test.metric.CostModel)" overall="0" reason="cost from calling non-overridable method"/></method><method cyclomatic="21" global="0" line="71" lod="0" name="com.google.test.metric.MethodCost compute(com.google.test.metric.MethodInfo)" overall="21"><cost cyclomatic="0" global="0" line="31" lod="0" method="com.google.test.metric.MetricComputer(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="71" lod="0" method="com.google.test.metric.TestabilityVisitor(com.google.test.metric.ClassRepository, java.io.PrintStream, com.google.test.metric.WhiteList, com.google.test.metric.CostModel)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="6" global="0" line="72" lod="0" method="void addStaticInitializationCost(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="6" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="73" lod="0" method="void addConstructorCost(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="74" lod="0" method="void addSetterInjection(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="2" global="0" line="75" lod="0" method="void addFieldCost(com.google.test.metric.MethodInfo, com.google.test.metric.TestabilityVisitor)" overall="2" reason="cost from calling non-overridable method"/><cost cyclomatic="7" global="0" line="78" lod="0" method="com.google.test.metric.MethodCost getLinkedMethodCost(com.google.test.metric.MethodInfo)" overall="7" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.example.MutableGlobalExample" cost="18"><method cyclomatic="0" global="0" line="24" lod="0" name="com.google.test.metric.example.MutableGlobalExample()" overall="0"/><method cyclomatic="0" global="2" line="77" lod="0" name="int getGlobalCount()" overall="20"><cost cyclomatic="0" global="0" line="24" lod="0" method="com.google.test.metric.example.MutableGlobalExample()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="2" line="77" lod="0" method="int getCount()" overall="20" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="1" line="73" lod="0" name="java.lang.String getGlobalId()" overall="10"><cost cyclomatic="0" global="0" line="24" lod="0" method="com.google.test.metric.example.MutableGlobalExample()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="1" line="73" lod="0" method="java.lang.String getId()" overall="10" reason="cost from calling non-overridable method"/></method><method cyclomatic="0" global="0" line="66" lod="0" name="com.google.test.metric.example.MutableGlobalExample$Gadget getInstance()" overall="0"><cost cyclomatic="0" global="0" line="24" lod="0" method="com.google.test.metric.example.MutableGlobalExample()" overall="0" reason="implicit cost from construction"/></method><method cyclomatic="0" global="2" line="81" lod="0" name="int globalIncrement()" overall="20"><cost cyclomatic="0" global="0" line="24" lod="0" method="com.google.test.metric.example.MutableGlobalExample()" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="2" line="81" lod="0" method="int increment()" overall="20" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.asm.MethodVisitorBuilder$3" cost="17"><method cyclomatic="0" global="0" line="1" lod="0" name="com.google.test.metric.asm.MethodVisitorBuilder$3(com.google.test.metric.asm.MethodVisitorBuilder, int, org.objectweb.asm.Label)" overall="0"/><method cyclomatic="5" global="0" line="181" lod="0" name="void if1(java.lang.String)" overall="5"><cost cyclomatic="0" global="0" line="1" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$3(com.google.test.metric.asm.MethodVisitorBuilder, int, org.objectweb.asm.Label)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="181" lod="0" method="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="181" lod="0" method="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="181" lod="0" method="com.google.test.metric.method.op.stack.Transform(int, java.lang.String, com.google.test.metric.Type, com.google.test.metric.Type, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="181" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="181" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method><method cyclomatic="5" global="0" line="185" lod="0" name="void if2(java.lang.String)" overall="5"><cost cyclomatic="0" global="0" line="1" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$3(com.google.test.metric.asm.MethodVisitorBuilder, int, org.objectweb.asm.Label)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="185" lod="0" method="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="185" lod="0" method="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="185" lod="0" method="com.google.test.metric.method.op.stack.Transform(int, java.lang.String, com.google.test.metric.Type, com.google.test.metric.Type, com.google.test.metric.Type)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="185" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="185" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method><method cyclomatic="21" global="0" line="125" lod="0" name="void run()" overall="21"><cost cyclomatic="0" global="0" line="1" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$3(com.google.test.metric.asm.MethodVisitorBuilder, int, org.objectweb.asm.Label)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="5" global="0" line="127" lod="0" method="void if1(java.lang.String)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="157" lod="0" method="void if2(java.lang.String)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="177" lod="0" method="void conditionalGoto(org.objectweb.asm.Label)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="177" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method></class><class class="com.google.test.metric.asm.MethodVisitorBuilder$32" cost="17"><method cyclomatic="0" global="0" line="1" lod="0" name="com.google.test.metric.asm.MethodVisitorBuilder$32(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.String, int)" overall="0"/><method cyclomatic="17" global="0" line="899" lod="0" name="void run()" overall="17"><cost cyclomatic="0" global="0" line="1" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$32(com.google.test.metric.asm.MethodVisitorBuilder, java.lang.String, int)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="899" lod="0" method="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="899" lod="0" method="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="12" global="0" line="899" lod="0" method="com.google.test.metric.Type fromDesc(java.lang.String)" overall="12" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="900" lod="0" method="com.google.test.metric.method.op.stack.MultiANewArrayIns(int, com.google.test.metric.Type, int)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="899" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="899" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method></class><class class="com.google.test.metric.method.BlockDecomposer$1" cost="17"><method cyclomatic="0" global="0" line="1" lod="0" name="com.google.test.metric.method.BlockDecomposer$1(com.google.test.metric.method.BlockDecomposer, org.objectweb.asm.Label, java.lang.String)" overall="0"/><method cyclomatic="17" global="0" line="174" lod="0" name="void run()" overall="17"><cost cyclomatic="0" global="0" line="1" lod="0" method="com.google.test.metric.method.BlockDecomposer$1(com.google.test.metric.method.BlockDecomposer, org.objectweb.asm.Label, java.lang.String)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="174" lod="0" method="java.util.Map access$0(com.google.test.metric.method.BlockDecomposer)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="11" global="0" line="175" lod="0" method="com.google.test.metric.Type fromClass(java.lang.Class)" overall="11" reason="cost from calling non-overridable method"/><cost cyclomatic="4" global="0" line="176" lod="0" method="com.google.test.metric.method.Constant(java.lang.Object, com.google.test.metric.Type)" overall="4" reason="cost from calling non-overridable method"/><cost cyclomatic="1" global="0" line="176" lod="0" method="void setExceptionHandler(int, com.google.test.metric.method.Constant)" overall="1" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="177" lod="0" method="java.util.List access$1(com.google.test.metric.method.BlockDecomposer)" overall="0" reason="cost from calling non-overridable method"/></method></class><class class="com.google.test.metric.asm.MethodVisitorBuilder$10" cost="16"><method cyclomatic="0" global="0" line="1" lod="0" name="com.google.test.metric.asm.MethodVisitorBuilder$10(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="0"/><method cyclomatic="16" global="0" line="356" lod="0" name="void run()" overall="16"><cost cyclomatic="0" global="0" line="1" lod="0" method="com.google.test.metric.asm.MethodVisitorBuilder$10(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="0" reason="implicit cost from construction"/><cost cyclomatic="0" global="0" line="356" lod="0" method="com.google.test.metric.method.BlockDecomposer access$0(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="356" lod="0" method="int access$1(com.google.test.metric.asm.MethodVisitorBuilder)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="11" global="0" line="356" lod="0" method="com.google.test.metric.Variable access$4(com.google.test.metric.asm.MethodVisitorBuilder, int, com.google.test.metric.Type)" overall="11" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="356" lod="0" method="com.google.test.metric.method.op.stack.Store(int, com.google.test.metric.Variable)" overall="0" reason="cost from calling non-overridable method"/><cost cyclomatic="5" global="0" line="356" lod="0" method="void addOp(com.google.test.metric.method.op.stack.StackOperation)" overall="5" reason="cost from calling non-overridable method"/><cost cyclomatic="0" global="0" line="356" lod="1" overall="1" reason="cost from breaking the Law of Demeter"/></method></class></testability>