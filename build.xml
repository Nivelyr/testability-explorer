<project name="testability-explorer" default="test">

	<import file="base.xml" />

	<target name="generate-cpp-grammar" depends="init">
		<mkdir dir="src-gen/com/google/test/metric/cpp" />
		<antlr target="src/com/google/test/metric/cpp/cppparser.g" outputdirectory="src-gen/com/google/test/metric/cpp">
			<classpath>
				<pathelement path="lib/antlr-2.7.7.jar" />
			</classpath>
		</antlr>
	</target>

	<target name="compile" depends="generate-cpp-grammar">
		<javac destdir="target/bin" debug="true" target="1.5">
			<src path="src" />
			<src path="src-gen" />
			<classpath refid="compile.classpath" />
			<exclude name="com/google/ant/**" />
		</javac>
		<copy todir="target/bin">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="instrument" depends="compile">
		<path id="bin.path">
			<pathelement path="target/bin" />
		</path>
		<emma>
			<instr instrpathref="bin.path" destdir="target/bin-emma" metadatafile="target/emma/metadata.emma" merge="true">
				<filter excludes="com.google.test.metric.example.*" />
				<filter excludes="com.google.test.metric.cpp.InternalLexer" />
				<filter excludes="com.google.test.metric.cpp.InternalParser" />
			</instr>
		</emma>
	</target>

	<target name="compile-tests" depends="instrument">
		<javac srcdir="src-test" destdir="target/bin-test" debug="true" target="1.5">
			<classpath refid="test.classpath" />
			<exclude name="com/google/ant/**" />
		</javac>
	</target>

	<target name="test" depends="compile-tests">
		<junit printsummary="yes" haltonfailure="yes" fork="yes" maxmemory="750M">
			<jvmarg value="-Demma.coverage.out.file=target/emma/coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />
			<classpath refid="test.classpath" />

			<formatter type="xml" usefile="true" />

			<batchtest fork="yes" haltonfailure="false" todir="target/reports/junit">
				<fileset dir="src-test">
					<include name="**/*Test.java" />
					<exclude name="**/*TestCase.java" />
					<exclude name="**/AllTests.java" />
					<exclude name="**/*TestCase.java" />
					<exclude name="com/google/ant/**" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="coverage" depends="test">
		<emma>
			<report sourcepath="src" metrics="method:70,block:80,line:80,class:100">
				<fileset dir="target/emma">
					<include name="*.emma" />
				</fileset>

				<txt outfile="target/reports/emma/coverage.txt" />
				<html outfile="target/reports/emma/coverage.html" />
				<xml outfile="target/reports/emma/coverage.xml" />
			</report>
		</emma>
	</target>

	<target name="jar" depends="compile, revision">
		<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="lib/jarjar.jar" />
		<jarjar jarfile="target/dist/${project-name}-${version}-r${revision}.jar">
			<manifest>
				<attribute name="Main-Class" value="com.google.test.metric.Testability" />
			</manifest>
			<fileset dir="target/bin">
				<exclude name="com/google/ant/**" />
			</fileset>
			<zipfileset src="lib/asm-3.0.jar" />
			<rule pattern="org.objectweb.asm.**" result="com.google.test.org.objectweb.asm.@1" />
			<zipfileset src="lib/args4j-2.0.8.jar" />
			<rule pattern="org.koshuke.args4j.**" result="com.google.test.org.koshuke.args4j.@1" />
		</jarjar>
		<zip destfile="target/dist/${project-name}-${version}-r${revision}-src.jar">
			<fileset dir="src">
				<exclude name="**/.svn" />
			</fileset>
		</zip>
	</target>

	<target name="dist" depends="jar">
		<echo file="testability.sh">java -jar ${project-name}-${version}-r${revision}.jar</echo>
		<zip destfile="target/dist/${project-name}-${version}-r${revision}.zip">
			<fileset dir=".">
				<include name="README.txt" />
				<include name="LICENSE.txt" />
				<include name="testability.sh" />
			</fileset>
			<fileset dir="target/dist">
				<include name="${project-name}-${version}-r${revision}.jar" />
				<include name="${project-name}-${version}-r${revision}-src.jar" />
			</fileset>
		</zip>
	</target>

	<target name="build-explorer" depends="clean,coverage,dist" />

	<target name="build" depends="clean,coverage,dist">
		<ant antfile="task.xml" target="build.task" />
	</target>
</project>
